{"version":3,"sources":["../../server/controllers/tripController.js"],"names":["TripController","req","res","userId","userData","id","TripService","saveTrip","body","then","data","status","json","message","err","viewAllCreatedTrips","response","rows","params","updateStatus","error","query","origin","destination","viewAllTripsbyOriginDestination","viewAllTripsOrigin","viewAllTripsDestination"],"mappings":"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","sourcesContent":["import TripService from '../utilities/services/tripServices';\n\n/**\n * @exports\n * @class TripController\n */\nclass TripController {\n  /**\n     * Creates a new Trip\n     * @staticmethod\n     * @param  {object} req - Trip object\n     * @param {object} res - Response object\n     * @return {json} res.json\n     */\n  static createTrip(req, res) {\n    const userId = req.userData.id;\n    TripService\n      .saveTrip(req.body, userId)\n      .then(data => res.status(201).json({\n        status: 201,\n        data,\n        message: 'New Trip created successfully',\n      }))\n      .catch(err => res.status(400).json(err));\n  }\n\n\n  /**\n   * View all Trips\n   * @staticmethod\n   * @param  {object} req - Trip objectexport default TripController\n   * @param {object} res - Response object\n   * @return {json} res.json\n   */\n  static viewAllTrips(req, res) {\n    TripService\n      .viewAllCreatedTrips()\n      .then(response => res.status(200).json({\n        status: 200,\n        message: 'Successfully fetched all Trips',\n        data: response.rows,\n      }))\n      /* istanbul ignore next-line */\n      .catch(err => res.status(400).json(err));\n  }\n\n  /**\n     * Update Trip Destination\n     * @staticmethod\n     * @param  {object} req - Trip object\n     * @param {object} res - Response object\n     * @return {json} res.json\n     */\n  static updateTripStatus(req, res) {\n    const {\n      id,\n    } = req.params;\n    const status = req.body;\n\n    TripService\n      .updateStatus(id, status)\n      .then(response => res.status(200).json({\n        status: 200,\n        message: 'Trip Status Updated Successfully',\n        data: response,\n      }))\n      // eslint-disable-next-line no-unused-vars\n      .catch(err => res.status(404).json({\n        status: 404,\n        error: 'This Trip does not exist',\n      }));\n  }\n\n  /**\n   * View all Trips  by origin\n   * @staticmethod\n   * @param  {object} req - Trip objectexport default TripController\n   * @param {object} res - Response object\n   * @return {json} res.json\n   */\n  static viewAllTripsbyOriginorDestination(req, res) {\n    const {\n      origin,\n      destination,\n    } = req.query;\n\n    if (origin && destination) {\n      TripService\n        .viewAllTripsbyOriginDestination(origin, destination)\n        .then(response => res.status(200).json({\n          status: 200,\n          message: 'Successfully fetched all Trips by Origin and Destination',\n          data: response.rows,\n        }))\n        .catch(err => res.status(400).json(err));\n    } else if (origin) {\n      TripService\n        .viewAllTripsOrigin(origin)\n        .then(response => res.status(200).json({\n          status: 200,\n          message: 'Successfully fetched all Trips by origin',\n          data: response.rows,\n        }))\n        .catch(err => res.status(400).json(err));\n    } else if (destination) {\n      TripService\n        .viewAllTripsDestination(destination)\n        .then(response => res.status(200).json({\n          status: 200,\n          message: 'Successfully fetched all Trips by Destination',\n          data: response.rows,\n        }))\n        .catch(err => res.status(400).json(err));\n    } else {\n      /* istanbul ignore next-line */\n      return res.status(400).json({\n        status: 400,\n        message: 'Could not fetch any trips',\n      });\n    }\n  }\n}\n\nexport default TripController;\n"],"file":"tripController.js"}