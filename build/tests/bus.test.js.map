{"version":3,"sources":["../../server/tests/bus.test.js"],"names":["chai","use","chaiHttp","should","userToken","before","plateNumber","queryProivider","deleteBusByplateNumber","then","res","it","done","request","server","post","send","email","password","end","err","body","data","token","have","property","to","equals","be","an","describe","set","numberPlate","manufacturer","model","year","capacity","status"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../app';\nimport queryProivider from '../utilities/queries';\n\nchai.use(chaiHttp);\nchai.should();\n\nlet userToken = '';\n\nbefore(() => {\n  const plateNumber = 'test123test';\n  return queryProivider.deleteBusByplateNumber(plateNumber).then((res) => {}).catch(() => {});\n});\n\nbefore(() => {\n  it('it should login user', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signin')\n      .send({\n        email: 'dapo@gmail.com',\n        password: 'dapo',\n      })\n      .end((err, res) => {\n        userToken = res.body.data.token;\n        res.body.should.have.property('status').to.equals(200);\n        res.body.should.have.property('data').to.be.an('object');\n        done();\n      });\n  });\n});\n\n\ndescribe('UNIT TESTS FOR Buses', () => {\n  /*\n     * Test the /GET route\n     */\n  describe('/POST REQUEST', () => {\n    it('it should create bus ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/buses')\n        .set('authorization', `Bearer ${userToken}`)\n        .send({\n          numberPlate: 'test123test',\n          manufacturer: 'toyota',\n          model: 'camry',\n          year: '2015',\n          capacity: '10',\n        })\n        .end((err, res) => {\n        //   user = res.body.data.accountNumber;\n\n          res.should.have.status(201);\n          res.body.should.have.property('status').to.equals(201);\n          res.body.should.have.property('data').to.be.an('object');\n          res.body.should.have\n            .property('message')\n            .to.equals('New Bus created successfully');\n\n          done();\n        });\n    });\n\n    it('it should not create empty bus ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/buses')\n        .set('authorization', `Bearer ${userToken}`)\n        .send({})\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('status').to.equals(400);\n          res.body.should.have\n            .property('message')\n            .to.equals('Please fill all fields');\n\n          done();\n        });\n    });\n\n    it('it should not create bus with existing plate number', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/buses')\n        .set('authorization', `Bearer ${userToken}`)\n        .send({\n          numberPlate: 'test123test',\n          manufacturer: 'toyota',\n          model: 'camry',\n          year: '2015',\n          capacity: '10',\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('status').to.equals(400);\n          res.body.should.have\n            .property('message')\n            .to.equals('Bus with this platenumber exists already');\n\n          done();\n        });\n    });\n\n\n    it('it should not create bus with unauthorised user', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/buses')\n        .set('authorization', `Bearer ${23456}`)\n        .send({\n          numberPlate: 'test123test',\n          manufacturer: 'toyota',\n          model: 'camry',\n          year: '2015',\n          capacity: '10',\n        })\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.have.property('status').to.equals(401);\n          res.body.should.have\n            .property('error')\n            .to.equals('Authentication Failed');\n\n          done();\n        });\n    });\n\n\n    it('it should not create bus with wrong parameters ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/buses')\n        .set('authorization', `Bearer ${userToken}`)\n        .send({\n          numberPlate: 'test123test',\n          manufacturer: 'toyota',\n          model: 'camry',\n          year: '2015',\n          capacity: 'rrt',\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('status').to.equals(400);\n\n          done();\n        });\n    });\n  });\n});\n"],"file":"bus.test.js"}