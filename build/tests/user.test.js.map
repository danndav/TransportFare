{"version":3,"sources":["../../server/tests/user.test.js"],"names":["chai","use","chaiHttp","should","before","email","queryProivider","deleteUserByEmailQuery","then","res","describe","it","done","request","server","post","send","firstName","lastName","phoneNumber","password","isAdmin","end","err","body","have","property","to","equals","be","a","status","an"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../app';\nimport queryProivider from '../utilities/queries';\n\nchai.use(chaiHttp);\nchai.should();\n\nbefore(() => {\n  const email = 'tester@gmail.com';\n  return queryProivider.deleteUserByEmailQuery(email).then((res) => {}).catch(() => {});\n});\n\n\n// eslint-disable-next-line no-undef\ndescribe('UNIT TESTS FOR DUMMY USER CONTROLLERS', () => {\n  /*\n   * Test the /GET route\n  */\n});\n// eslint-disable-next-line no-undef\ndescribe('/POST REQUEST', () => {\n  it('it should signup user ', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({\n        email: 'tester@gmail.com',\n        firstName: 'hello',\n        lastName: 'Abass',\n        phoneNumber: '08023461217',\n        password: 'tolaniabass',\n        isAdmin: false,\n      })\n      .end((err, res) => {\n        res.body.should.have\n          .property('message')\n          .to.equals('New user created successfully');\n        res.body.should.have.property('status').to.equals(201);\n        res.body.should.have.property('data').to.be.a('object');\n        done();\n      });\n  });\n\n  it('it should not signup empty user ', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({})\n      .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.have\n          .property('message')\n          .to.equals('Please fill all fields');\n        res.body.should.have.property('status').to.equals(400);\n\n        done();\n      });\n  });\n\n  it('it should not signup invalid firstnane ', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({\n        email: 'tester@gmail.com',\n        firstName: 'hel//lo',\n        lastName: 'Abass',\n        phoneNumber: '08023461217',\n        password: 'tolaniabass',\n        isAdmin: false,\n      })\n      .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.have.property('status').to.equals(400);\n\n        done();\n      });\n  });\n\n\n  it('it should not signup invalid lastname', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({\n        email: 'tester@gmail.com',\n        firstName: 'hello',\n        lastName: 'Abas\\\\s',\n        phoneNumber: '08023461217',\n        password: 'tolaniabass',\n        isAdmin: false,\n      })\n      .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.have.property('status').to.equals(400);\n\n        done();\n      });\n  });\n\n  it('it should not signup user that exist', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({\n        email: 'dannain@gmail.com',\n        firstName: 'danieli',\n        lastName: 'david',\n        phoneNumber: '08119047808',\n        password: 'danieldavid',\n        isAdmin: true,\n      })\n      .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.have.property('status').to.equals(400);\n        res.body.should.have\n          .property('message')\n          .to.equals('User with this email exists already');\n\n        done();\n      });\n  });\n\n  it('it should check for empty user', (done) => {\n    chai\n      .request(server)\n      .post('/api/v1/auth/signup')\n      .send({})\n      .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.have.property('status').to.equals(400);\n        res.body.should.have\n          .property('message')\n          .to.equals('Please fill all fields');\n\n        done();\n      });\n  });\n\n  describe('/POST REQUEST', () => {\n    it('it should signin user ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/auth/signin')\n        .send({\n          email: 'dannaing@gmail.com',\n          password: 'danieldavid',\n        })\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('status').to.equals(200);\n          res.body.should.have.property('data').to.be.an('object');\n          res.body.should.have\n            .property('message')\n            .to.equals('Authentication Successful');\n\n          done();\n        });\n    });\n\n\n    it('it should not  signin user ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/auth/signin')\n        .send({})\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('status').to.equals(400);\n          res.body.should.have\n            .property('message')\n            .to.equals('Please fill all fields');\n\n          done();\n        });\n    });\n\n\n    it('it should not  signin user with wrong input', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/auth/signin')\n        .send({\n          email: 'tolaniabassgmail.com',\n          password: 'tolaniabass',\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property('status').to.equals(400);\n\n\n          done();\n        });\n    });\n\n\n    it('it should check for unregistered email and wrong password ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/auth/signin')\n        .send({\n          email: 'yyysttt@gmail.com',\n          password: 'tolaniabass',\n        })\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.have\n            .property('responseMessage')\n            .to.equals('Wrong Email and Password Combination. Please Check your credentials');\n          done();\n        });\n    });\n  });\n});\n"],"file":"user.test.js"}