{"version":3,"sources":["../../../server/utilities/services/tripServices.js"],"names":["TripServices","body","userid","Promise","resolve","reject","queryProvider","saveTripQuery","then","res","data","id","rows","createduser","busId","busid","origin","destination","tripDate","tripdate","fare","status","err","findAllTripsQuery","response","updateTripStatusQuery","console","log","viewAllTripsbyOriginDestinationQuery","findAllTripsbyOriginQuery","findAllTripsbyDestinationQuery"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\nimport queryProvider from '../queries';\n\n\n/** export default TripService;\n * @exports\n * @class TripServices\n */\nclass TripServices {\n  /**\n     * save new Trip\n     * @staticmethod\n     * @param  {string} body - Request object\n     * @param  {string} Tripid - Request object\n     * @return {string} res\n     *\n     */\n  static saveTrip(body, userid) {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .saveTripQuery(body, userid)\n        .then((res) => {\n          const data = {\n            id: res.rows[0].id,\n            createduser: res.rows[0].createduser,\n            busId: res.rows[0].busid,\n            origin: res.rows[0].origin,\n            destination: res.rows[0].destination,\n            tripDate: res.rows[0].tripdate,\n            fare: res.rows[0].fare,\n            status: res.rows[0].status,\n          };\n          resolve(data);\n        })\n        .catch(err => reject(err));\n    });\n  }\n\n\n    /**\n   * view all Trips created\n   * @staticmethod\n   * @return {string} res\n   */\n  static viewAllCreatedTrips() {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .findAllTripsQuery()\n        .then(response => resolve(response))\n        /* istanbul ignore next-line */\n        .catch(err => reject(err));\n    });\n  }\n\n\n    /**\n     * update Trip status\n     * @staticmethod\n     * @param  {string} TripId - Request object\n     * @param  {string} body - Request object\n     * @param  {string} host - Request object\n     * @param  {string} user_id - Request object\n     * @return {string} res\n     */\n    static updateStatus(id, body) {\n      return new Promise((resolve, reject) => {\n          queryProvider\n              .updateTripStatusQuery(id, body)\n              .then((res) => {\n                  console.log(res.rows);\n                  const data = {\n                      id: res.rows[0].id,\n                      status: res.rows[0].status,\n                  };\n                  resolve(data);\n              })\n              .catch(err => reject(err));\n      });\n  }\n\n       /**\n   * view all Trips by origin\n   * @staticmethod\n   * @return {string} res\n   */\n  static viewAllTripsbyOriginDestination(origin, destination) {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .viewAllTripsbyOriginDestinationQuery(origin, destination)\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  }\n\n     /**\n   * view all Trips by origin\n   * @staticmethod\n   * @return {string} res\n   */\n  static viewAllTripsOrigin(origin) {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .findAllTripsbyOriginQuery(origin)\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  }\n\n   /**\n   * view all Trips by destination\n   * @staticmethod\n   * @return {string} res\n   */\n  static viewAllTripsDestination(destination) {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .findAllTripsbyDestinationQuery(destination)\n        .then(response => resolve(response))\n        .catch(err => reject(err));\n    });\n  }\n}\n\nexport default TripServices;\n"],"file":"tripServices.js"}