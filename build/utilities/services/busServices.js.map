{"version":3,"sources":["../../../server/utilities/services/busServices.js"],"names":["BusServices","body","userid","Promise","resolve","reject","queryProvider","saveBusQuery","then","res","data","id","rows","numberPlate","number_plate","manufacturer","model","year","capacity","createdAt","createdon","err","console","log"],"mappings":";;;;;;;AACA;;;;;;;;;;AAGA;;;;IAIMA,W;;;;;;;;;;AACJ;;;;;;;4BAOeC,I,EAAMC,M,EAAQ;AAC3B,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,4BACGC,YADH,CACgBN,IADhB,EACsBC,MADtB,EAEGM,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,cAAMC,IAAI,GAAG;AACXC,YAAAA,EAAE,EAAEF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYD,EADL;AAEXT,YAAAA,MAAM,EAAEO,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYV,MAFT;AAGXW,YAAAA,WAAW,EAAEJ,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYE,YAHd;AAIXC,YAAAA,YAAY,EAAEN,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYG,YAJf;AAKXC,YAAAA,KAAK,EAAEP,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYI,KALR;AAMXC,YAAAA,IAAI,EAAER,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYK,IANP;AAOXC,YAAAA,QAAQ,EAAET,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYM,QAPX;AAQXC,YAAAA,SAAS,EAAEV,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYQ;AARZ,WAAb;AAUAhB,UAAAA,OAAO,CAACM,IAAD,CAAP;AACD,SAdH,WAeS,UAACW,GAAD,EAAS;AACvBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACU,iBAAOhB,MAAM,CAACgB,GAAD,CAAb;AACA,SAlBL;AAmBD,OApBM,CAAP;AAqBD;;;;;;eAGYrB,W","sourcesContent":["/* eslint-disable indent */\nimport queryProvider from '../queries';\n\n\n/** export default UserService;\n * @exports\n * @class BusServices\n */\nclass BusServices {\n  /**\n     * save new bus\n     * @staticmethod\n     * @param  {string} body - Request object\n     * @param  {string} userid - Request object\n     * @return {string} res\n     */\n  static saveBus(body, userid) {\n    return new Promise((resolve, reject) => {\n      queryProvider\n        .saveBusQuery(body, userid)\n        .then((res) => {\n          const data = {\n            id: res.rows[0].id,\n            userid: res.rows[0].userid,\n            numberPlate: res.rows[0].number_plate,\n            manufacturer: res.rows[0].manufacturer,\n            model: res.rows[0].model,\n            year: res.rows[0].year,\n            capacity: res.rows[0].capacity,\n            createdAt: res.rows[0].createdon,\n          };\n          resolve(data);\n        })\n        .catch((err) => {\n console.log('err1', err);\n           return reject(err);\n          });\n    });\n  }\n}\n\nexport default BusServices;\n"],"file":"busServices.js"}